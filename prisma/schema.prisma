generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Criar uma migrations : yarn prisma migrate dev

model Usuario {
  id        String    @id @default(uuid())
  cargo     String
  matricula String?
  estado    Boolean? @default(true)
  nome      String
  senha     String
  criadoEm  DateTime? @default(now())

  ordemDeCompra OrdemDeCompra[]

  @@map("usuarios")
}

model Produto {
  id             String    @id @default(uuid())
  codigoDeBarras String
  referencia     String
  nome           String
  tamanho        String
  estoque        Int
  saida          Int?      @default(0)
  reservado      Int?      @default(0)
  valorAtacado   String
  valorVarejo    String
  criadoEm       DateTime? @default(now())
  atualizadoEm   DateTime? @default(now())

  itemDoPedido ItemDoPedido[]
  cor          Cor?           @relation(fields: [corID], references: [id])
  corID        String?

  @@map("produtos")
}

model Cliente {
  id             String    @id @default(uuid())
  cpf_cnpj       String
  nome           String
  endereco       String
  bairro         String
  cidade         String
  estado         String
  whatsapp       String
  dataNascimento String
  criadoEm       DateTime? @default(now())

  ordemDeCompra OrdemDeCompra[]

  @@map("clientes")
}

model OrdemDeCompra {
  id String @id @default(uuid())

  estado           String  @default("Aberto") // Criado Separado Entregue
  formaDePagamento String?
  tempoDePagamento String?
  observacao       String?

  desconto       Int?
  valorPago      Float?
  totalDaNota    Float?
  valorAdiantado Float?

  itemDoPedido ItemDoPedido[]

  cliente   Cliente? @relation(fields: [clienteID], references: [id])
  clienteID String?

  criadoEm     DateTime? @default(now())
  atualizadoEm DateTime? @default(now())
  usuario      Usuario?  @relation(fields: [usuarioID], references: [id])
  usuarioID    String?

  @@map("ordensDeCompras")
}

model ItemDoPedido {
  id            String @id @default(uuid())
  quantidade    Int
  valorUnitario Float

  produto         Produto       @relation(fields: [produtoID], references: [id])
  produtoID       String
  ordemDeCompra   OrdemDeCompra @relation(fields: [ordemDeCompraID], references: [id])
  ordemDeCompraID String

  criadoEm DateTime? @default(now())

  @@map("itensDoPedido")
}

model Cor {
  id     String @id @default(uuid())
  nome   String
  codigo String

  produto Produto[]

  @@map("cores")
}

model BancoDeHoras {
  id String @id @default(uuid())

  codigo String

  @@map("bancodehoras")
}
